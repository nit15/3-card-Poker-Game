
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cardpokergame;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Random;


/**
 *
 * @author Nitya
 */
public class Cardpokergame
{
     char S,C,H,D;
     String t1,t2,t3;
     int  o,t,w;
     char a,b,c;
      ArrayList hand1=new ArrayList();
      ArrayList hand2=new ArrayList();
      ArrayList dealhand=new ArrayList();
      ArrayList n=new ArrayList();
      Threecardlogic tcl=new Threecardlogic();
    public class card
    {
        int value;
        char suit;
        public card(char suit,int value)
        {
            suit=suit;
            value=value;
            String text;
           
            //text=(suit + value+"").toString() ;
           //System.out.println("text:" + suit + value+"");
            text=(suit+(value+"")).toString();
            // System.out.println(text);
        }    
   }
      
     
    /**
     * @param args the command line arguments
     */
    public class deck
{
  String text;
  char suit;
  ArrayList cardlist=new ArrayList();
  void getdeck()
   {
       for (int i = 0; i <4; i++)
       {
           if(i==0)
           {
               suit='C';
           }
           else if(i==1)
           {
               suit='S';
           }
           else if(i==2)
           {
               suit='H';
           }
           else
           {
                suit='D';       
           }
           for (int value =2; value < 15; value++)
           {
                  text=((value+"")+suit).toString();
                  cardlist.add(text);
                  
           }
       }
   }
 }
      // game g=new game();
    public class dealer
    {
        int cd=11;
        void getdealercard(String t)
        {
            dealhand.add(t);
        }
        public boolean checkdealhand()
        {
            tcl.evalHand1(dealhand);
            if(tcl.evalHand1(dealhand)==0)
            {  
                if(tcl.checkhighcard(dealhand)>(11))
                    return false;
                else
                    return true;
            }
            else
             return false;
        }
        
    }
            public class player
    {
      
      void getplayercard(String t,int i)
     {        
         if(i==1)
           hand1.add(t);
         else
             hand2.add(t);
     }
    }
           
         public class Threecardlogic
         {
           /*  public void sortlist()
            {
                Collections.sort(hand1);
                Collections.sort(hand2);
                Collections.sort(dealhand);
            }*/
             public void setvar()
             {
                 o=0;
                 t=0;
                 w=0;
                 t1="null";
                 t2="null";
                 t3="null";
             }
             boolean checkint(int o,int t,int w)
             {
                if((t==o+1 && w==o+2)  || (t==o+2 && w==o+1) || (o==t+1 && w==t+2) || (o==t+2 && w==t+1) || (o==w+1 && t==w+2) || (o==w+1 && t==w+2))
                {
                    return true;
                }   
                else if((o==14 && t==2 && w==3)||(o==14 && t==3 && w==2) || (o==2 && t==14 && w==3) || (o==3 && t==14 && w==14) || (o==3 && t==2 && w==14) || (o==2 && t==3 && w==14))
                   return true;
                else
                    return false;                    
             }
           
             public int evalHand1(ArrayList h)
             {
                 o=0;
                 t=0;
                 w=0;
                 t1="null";
                 t2="null";
                 t3="null";
                 t1=h.get(0)+"";
                 t2=h.get(1)+"";
                 t3=h.get(2)+"";
               
                 if(t1.length()==3)
                 {  o=10+Integer.parseInt(t1.charAt(1)+"");
                     a=t1.charAt(2);}
                 else
                 { o=Integer.parseInt(t1.charAt(0)+"");
                   a=t1.charAt(1);
                 }
                 if(t2.length()==3)
                 {
                     t=10+Integer.parseInt(t2.charAt(1)+"");
                     b=t2.charAt(2);                 
                 }
                 else
                 { 
                     t=Integer.parseInt(t2.charAt(0)+"");
                     b=t2.charAt(1);
                 }
                 if(t3.length()==3)
                 {
                     w=10+Integer.parseInt(t3.charAt(1)+"");
                     c=t3.charAt(2);
                 }
                 else
                 {
                     w=Integer.parseInt(t3.charAt(0)+"");
                     c=t3.charAt(1);
                 }
                 
               
                if((tcl.checkint(o, t, w)) && (a==b) && (a==c))
                {
                    
                    return 5;
                }
                else if(o==t && o==w)
                {
                    
                    return 4;
                }
                else if( tcl.checkint(o, t, w))
                {
                    
                    return 3;
                }
                else if(a==b && a==c)
                {
                    return 2;
                }
                else if((o==t) || (t==w) || (o==w))
                {
                    return 1;
                }
                else
                    return 0;
             
              
             }
             
             public int checksuit(ArrayList h)
             {
                
                 tcl.evalHand1(h);
                 if(a==S)
                     return 4;
                 else if(a==D)
                     return 3;
                 else if(a==C)
                     return 2;
                 else
                     return 1;
             }
             public int checkhighcard(ArrayList h)
             {
                   tcl.evalHand1(h);
                 
                  if( (tcl.evalHand1(h)==0) || (tcl.evalHand1(h)==3))
                  {
                   if((o>t) && (o>w))
                       return o;
                   else if((t>o) && (t>w))
                       return t;
                   else
                       return w;
                  }
                  else if( tcl.evalHand1(h)==1)
                   if(o==t)
                       return o;
                   else if(o==w)
                       return o;
                   else
                       return w;
                 else if(tcl.evalHand1(h)==2)
                      return tcl.checksuit(h);                    
                 else if(tcl.evalHand1(h)==5)
                     if((o>t) && (o>w))
                       return o;
                    else if((t>o) && (t>w))
                       return t;
                    else if((w>o) && (w>t))
                       return w;
                    else
                        return tcl.checksuit(h);
                 else
                    return o;
               }
             public int lowcard(ArrayList h)
             {
                 tcl.evalHand1(h);
                 if((o<w) && (o<t))
                     return o;
                 else if((t<o) && (t<w))
                     return t;
                 else
                     return w;
             }
             public int middlecard(ArrayList h)
             {
                tcl.evalHand1(h);
                if((o<tcl.checkhighcard(h)) && (o>tcl.lowcard(h)))
                     return o;
                 else if((t<tcl.checkhighcard(h)) && (t>tcl.lowcard(h)))
                     return t;
                 else
                     return w;
             }
             
             public void setList()
             {
                 n.removeAll(n);
                 hand1.removeAll(hand1);
                 hand2.removeAll(hand2);
                 dealhand.removeAll(dealhand);
             }
             public void compareplayer()
             {
                 if(tcl.evalHand1(hand1)>tcl.evalHand1(hand2))
                     n=hand1;
                
                else if((tcl.evalHand1(hand1)==tcl.evalHand1(hand2)) && (tcl.evalHand1(hand1)==0))
                 {
                     if(tcl.checkhighcard(hand1)>tcl.checkhighcard(hand2))
                         n=hand1;
                     else if((tcl.checkhighcard(hand1)==tcl.checkhighcard(hand2)) && (tcl.lowcard(hand1)>tcl.lowcard(hand2))) 
                         if(tcl.middlecard(hand1)<tcl.middlecard(hand2))
                             n=hand2;
                         else
                             n=hand1;
                     else if((tcl.lowcard(hand1)==tcl.lowcard(hand2)) && (tcl.checkhighcard(hand1)==tcl.checkhighcard(hand2)) && (tcl.middlecard(hand1)>tcl.middlecard(hand2)))
                         n=hand1;
                     else
                         n=hand2;
                 }
                 else if((tcl.evalHand1(hand1)==tcl.evalHand1(hand2)) && (tcl.evalHand1(hand1)==5))
                 {
                     if(tcl.checkhighcard(hand1)>tcl.checkhighcard(hand2))
                         n=hand1;
                     else
                         n=hand2;
                 }
                 else if((tcl.evalHand1(hand1)==tcl.evalHand1(hand2)) && (tcl.evalHand1(hand1)==1))
                 {
                     if(tcl.checkhighcard(hand1)>tcl.checkhighcard(hand2))
                         n=hand1;
                     else
                         n=hand2;
                 }
                 else if((tcl.evalHand1(hand1)==tcl.evalHand1(hand2)) && (tcl.evalHand1(hand1)==4))
                      {
                        if(tcl.checkhighcard(hand1)>tcl.checkhighcard(hand2))
                         n=hand1;
                        else
                         n=hand2;
                      }
                 else if((tcl.evalHand1(hand1)==tcl.evalHand1(hand2)) && (tcl.evalHand1(hand1)==3))
                     {   
                          if(tcl.checkhighcard(hand1)>tcl.checkhighcard(hand2))
                            n=hand1;
                         else
                            n=hand2;
                     } 
                 else if((tcl.evalHand1(hand1)==tcl.evalHand1(hand2)) && (tcl.evalHand1(hand1)==2))
                 {
                     if(tcl.checkhighcard(hand1)>tcl.checkhighcard(hand2))
                            n=hand1;
                         else
                            n=hand2;  
                 }
                 else
                     n=hand2;
             }
               public int comparehand(ArrayList p)
              {
                 if(tcl.evalHand1(p)>tcl.evalHand1(dealhand))
                     if(p==hand1)
                         return 2;
                     else 
                        return 3;
                     
                 else if((tcl.evalHand1(p)==tcl.evalHand1(dealhand)) && (tcl.evalHand1(p)==0))
                 {
                     if(tcl.checkhighcard(p)>tcl.checkhighcard(dealhand))
                     {    if(p==hand1)
                             return 2;
                          else 
                             return 3;
                     }
                     else if((tcl.checkhighcard(p)==tcl.checkhighcard(dealhand)) && (tcl.lowcard(p)>tcl.lowcard(dealhand))) 
                         if(tcl.middlecard(p)<tcl.middlecard(dealhand))
                             return 1;
                         else
                         {   
                          if(p==hand1)
                             return 2;
                          else 
                             return 3;
                         }
                     else if((tcl.lowcard(p)==tcl.lowcard(dealhand)) && (tcl.checkhighcard(p)==tcl.checkhighcard(dealhand)) && (tcl.middlecard(p)>tcl.middlecard(dealhand)))
                     {    
                          if(p==hand1)
                             return 2;
                          else 
                             return 3;
                     }
                     else
                        return 1;
                        
                 }
                 else if((tcl.evalHand1(p)==tcl.evalHand1(dealhand)) && (tcl.evalHand1(p)==5))
                 {
                     if(tcl.checkhighcard(p)>tcl.checkhighcard(hand2))
                        if(p==hand1)
                             return 2;
                          else 
                             return 3;
                     else
                         return 1;
                 }
                 else if((tcl.evalHand1(p)==tcl.evalHand1(dealhand)) && (tcl.evalHand1(p)==1))
                 {
                     if(tcl.checkhighcard(p)>tcl.checkhighcard(dealhand))
                       if(p==hand1)
                             return 2;
                          else 
                             return 3;
                     else
                         return 1;
                 }
                 else if((tcl.evalHand1(p)==tcl.evalHand1(dealhand)) && (tcl.evalHand1(p)==4))
                      {
                        if(tcl.checkhighcard(p)>tcl.checkhighcard(dealhand))
                           if(p==hand1)
                             return 2;
                          else 
                             return 3;
                     else
                         return 1;
                      }
                 else if((tcl.evalHand1(p)==tcl.evalHand1(dealhand)) && (tcl.evalHand1(p)==3))
                     {   
                          if(tcl.checkhighcard(p)>tcl.checkhighcard(dealhand))
                             if(p==hand1)
                              return 2;
                             else 
                              return 3;
                          else
                             return 1;
                      }
                 else if((tcl.evalHand1(p)==tcl.evalHand1(dealhand)) && (tcl.evalHand1(p)==2))
                 {
                     if(tcl.checkhighcard(p)>tcl.checkhighcard(dealhand))
                           if(p==hand1)
                              return 2;
                             else 
                              return 3;
                     else
                        return 1;
                 }
                 else
                     return 1;            
         }
            
 /*   public static void main(String arg[])
    {
         Cardpokergame cpg=new Cardpokergame();
    Cardpokergame.deck d=cpg.new deck();
      Cardpokergame.player p=cpg.new player();
        System.out.println(p.hand1);
    }*/
}
}
    
        
    // char C;
   //  Cardpokergame cpg=new Cardpokergame();
     //Cardpokergame.card c1=cpg.new card('D',13);
     
     // TODO code application logic here
    
    

